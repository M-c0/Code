/*
实现 strStr() 函数。

给你两个字符串 haystack 和 needle ，请你在 haystack 字符串中找出 needle 字符串出现的第一个位置（下标从 0 开始）。如果不存在，则返回  -1 。

 

说明：

当 needle 是空字符串时，我们应当返回什么值呢？这是一个在面试中很好的问题。

对于本题而言，当 needle 是空字符串时我们应当返回 0 。这与 C 语言的 strstr() 以及 Java 的 indexOf() 定义相符。

 

示例 1：

输入：haystack = "hello", needle = "ll"
输出：2
示例 2：

输入：haystack = "aaaaa", needle = "bba"
输出：-1
示例 3：

输入：haystack = "", needle = ""
输出：0
 

提示：

0 <= haystack.length, needle.length <= 5 * 104
haystack 和 needle 仅由小写英文字符组成
*/
//KMP
void getNext(char *t, int next[])
{
    int n = strlen(t),i = 0,j = -1;
    next[0] = -1;
    while(i<n-1)
    {
        if(j == -1 || t[i] == t[j])
        {
            i++;
            j++;
            next[i] = j;
        }
        else
            j = next[j];
    }
}

int KMP(char* s, char *t)
{
    int i = 0,j = 0,n = strlen(s),m = strlen(t);
    int next[m+1];
    getNext(t, next);
    while(i<n && j<m)
    {
        if(j == -1 || s[i] == t[j])
        {
            i++;
            j++;
        }
        else
            j = next[j];
    }
    if(j>=m)
        return i-m;
    return -1;
}

int strStr(char * haystack, char * needle){
    if(strlen(needle) == 0)
        return 0;
    return KMP(haystack,needle);
}

//暴力----取巧
class Solution {
public:
    int strStr(string haystack, string needle) {
        if(needle.length() == 0)
            return 0;
        int n = haystack.length(),m = needle.length();
        return haystack.find(needle);/*
        for(int i = 0,j = 0; i<n; i++)
        {
            if(haystack[i] == needle[j])
            {
                for(int k = 0; k<m; k++)
                {
                    if(haystack[i++]!=needle[j++])
                    {
                        i-=j;
                        j = 0;
                        break;
                    }
                }
                if(j==m)
                {
                    return i-j;
                }
            }
        }
        return -1;*/
    }
};
