/*
给你一个二进制字符串 s（仅由 '0' 和 '1' 组成的字符串）。
返回所有字符都为 1 的子字符串的数目。
由于答案可能很大，请你将它对 10^9 + 7 取模后返回。
示例 1：
输入：s = "0110111"
输出：9
解释：共有 9 个子字符串仅由 '1' 组成
"1" -> 5 次
"11" -> 3 次
"111" -> 1 次
*/

//找规律，假设有n个字符连续为1的子字符串，它所有字符都为 1 的子字符串的数目为 1+2+3+...+(n-1)+n；

int numSub(char * s){
    long int i,k = 0,sum = 0;
    for(i = 0; s[i]!='\0'; i++)
    {
        if(s[i] == '1')
        {
                k++;
                sum += k;
        }
        else
        {
            k = 0;
        }
    }
    return sum%((10*10*10*10*10*10*10*10*10)+7);//用 pow 函数返回的值为double型，这里会出错
}
