/*
给你一个链表的头节点 head ，旋转链表，将链表每个节点向右移动 k 个位置。

 

示例 1：


输入：head = [1,2,3,4,5], k = 2
输出：[4,5,1,2,3]
示例 2：


输入：head = [0,1,2], k = 4
输出：[2,0,1]
 

提示：

链表中节点的数目在范围 [0, 500] 内
-100 <= Node.val <= 100
0 <= k <= 2 * 109
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* rotateRight(struct ListNode* head, int k){
    if(k==0||head == NULL)
        return head;
    struct ListNode* p = head,*q;
    int s = 1;
    while(p->next!=NULL)
    {
        s++;
        p = p->next;
    }
    k%=s;
    p->next = head;
    p = p->next;
    for(int i = 1; i<=s; i++)
    {
        if(i == s-k)
        {
            q = p;
            p = p->next;
            q->next = NULL;
            break;
        }
        else
            p = p->next;
    }
    return p;
}
