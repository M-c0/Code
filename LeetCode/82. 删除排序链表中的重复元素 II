/*
存在一个按升序排列的链表，给你这个链表的头节点 head ，请你删除链表中所有存在数字重复情况的节点，只保留原始链表中 没有重复出现 的数字。

返回同样按升序排列的结果链表。

 

示例 1：


输入：head = [1,2,3,3,4,4,5]
输出：[1,2,5]
示例 2：


输入：head = [1,1,1,2,3]
输出：[2,3]
 

提示：

链表中节点数目在范围 [0, 300] 内
-100 <= Node.val <= 100
题目数据保证链表已经按升序排列
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* deleteDuplicates(struct ListNode* head){
    struct ListNode*pre = NULL,*t = head;
    if(head == NULL)
        return head;
    while(t!=NULL && t->next != NULL)
    {
        if(t->val == t->next->val)//如果找到了重复的
        
        {
            while(t->next!=NULL && t->val == t->next->val)//就一直遍历到不重复的
            {
                t=t->next;
            }
            if(pre != NULL)//把重复的前一个的next指向下一个
                pre->next = t->next;
            else//如果重复的是第一个，就直接把头节点指向下一个
                head = t->next;
        }
        else
            pre = t;//如果不重复，就把pre指向当前节点
        t = t->next;
    }
    return head;
}
