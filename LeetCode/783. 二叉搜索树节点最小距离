/*
给你一个二叉搜索树的根节点 root ，返回 树中任意两不同节点值之间的最小差值 。

注意：本题与 530：https://leetcode-cn.com/problems/minimum-absolute-difference-in-bst/ 相同

 

示例 1：


输入：root = [4,2,6,1,3]
输出：1
示例 2：


输入：root = [1,0,48,null,null,12,49]
输出：1
 

提示：

树中节点数目在范围 [2, 100] 内
0 <= Node.val <= 105
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int m,preval;
    void VBstree(TreeNode* root)//中序遍历
    {
        if(root!=NULL)
        {
            VBstree(root->left);
            if(preval == -1)
                preval = root->val;
            else
            {
                m = min(m,root->val-preval);//中序遍历是有序的，不需要去绝对值abs(root->val-preval)
                preval = root->val;
            }
            VBstree(root->right);
        }
    }

    int minDiffInBST(TreeNode* root) {
        m = 100001;
        preval = -1;
        VBstree(root);
        return m;
    }
};
