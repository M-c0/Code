/*
给你一个仅由大写英文字母组成的字符串，你可以将任意位置上的字符替换成另外的字符，总共可最多替换 k 次。在执行上述操作后，找到包含重复字母的最长子串的长度。
注意：字符串长度 和 k 不会超过 104。
示例 1：
输入：s = "ABAB", k = 2
输出：4
解释：用两个'A'替换为两个'B',反之亦然。
示例 2：
输入：s = "AABABBA", k = 1
输出：4
解释：
将中间的一个'A'替换为'B',字符串变为 "AABBBBA"。
子串 "BBBB" 有最长重复字母, 答案为 4。
*/
//双指针滑动窗口，一个数组记录该窗口出现字母频率最多的，该窗口中非重复的字母，即窗口区间减去重复频率最多的字母，剩下的即为要替换的
//每次右指针右移，如果区间仍然满足条件，那么左指针不移动，否则左指针至多右移一格，保证区间长度不减小。
//当我们右指针移动到尽头，左右指针对应的区间的长度必然对应一个长度最大的符合条件的区间。
int characterReplacement(char * s, int k){
    int max = 0,left = 0,right = 0;
    int num[26] = {0};
    while(right<strlen(s))
    {
        num[s[right]-'A']++;
        max = fmax(max,num[s[right]-'A']);//区间内重复字符最多的数量
        if(right - left+1-max > k)
        {
            num[s[left]-'A']--;
            left++;
        }
        right++;
    }
    return right-left;
}
