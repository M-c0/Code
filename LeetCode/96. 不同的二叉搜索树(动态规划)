//二叉排序树  动态规划
//结题思路：假设n个节点存在二叉排序树的个数是G(n)，1为根节点，2为根节点，...，n为根节点，当1为根节点时，其左子树节点个数为0，右子树节点个数为n-1，同理当2为根节点时，其左子树节点个数为1，右子树节点为n-2，所以可得G(n) = G(0)*G(n-1)+G(1)*(n-2)+...+G(n-1)*G(0)

int numTrees(int n){
    if(n == 0)
    return 0;
    int i,j,a[n+1];
    memset(a,0,sizeof(a));
    a[0] = 1;
    for(i = 1; i<=n; i++)
    {
        for(j = 0; j<i; j++)
        {
            a[i] += a[j]*a[i-j-1];//a[i]为以i为根节点二叉树的种类，a[j]位左子树的种类，a[i-j-1]为右子树的种类
        }
    }
    return a[n];
}
